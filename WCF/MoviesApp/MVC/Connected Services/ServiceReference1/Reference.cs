//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="movy", Namespace="http://schemas.datacontract.org/2004/07/WCF")]
    [System.SerializableAttribute()]
    public partial class movy : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Genre {
            get {
                return this.GenreField;
            }
            set {
                if ((object.ReferenceEquals(this.GenreField, value) != true)) {
                    this.GenreField = value;
                    this.RaisePropertyChanged("Genre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Price {
            get {
                return this.PriceField;
            }
            set {
                if ((object.ReferenceEquals(this.PriceField, value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IMyService")]
    public interface IMyService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DoWork", ReplyAction="http://tempuri.org/IMyService/DoWorkResponse")]
        void DoWork();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DoWork", ReplyAction="http://tempuri.org/IMyService/DoWorkResponse")]
        System.Threading.Tasks.Task DoWorkAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllMovie", ReplyAction="http://tempuri.org/IMyService/GetAllMovieResponse")]
        MVC.ServiceReference1.movy[] GetAllMovie();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllMovie", ReplyAction="http://tempuri.org/IMyService/GetAllMovieResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReference1.movy[]> GetAllMovieAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddMovie", ReplyAction="http://tempuri.org/IMyService/AddMovieResponse")]
        int AddMovie(string Title, string Genre, string Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/AddMovie", ReplyAction="http://tempuri.org/IMyService/AddMovieResponse")]
        System.Threading.Tasks.Task<int> AddMovieAsync(string Title, string Genre, string Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllMovieById", ReplyAction="http://tempuri.org/IMyService/GetAllMovieByIdResponse")]
        MVC.ServiceReference1.movy GetAllMovieById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/GetAllMovieById", ReplyAction="http://tempuri.org/IMyService/GetAllMovieByIdResponse")]
        System.Threading.Tasks.Task<MVC.ServiceReference1.movy> GetAllMovieByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateMovie", ReplyAction="http://tempuri.org/IMyService/UpdateMovieResponse")]
        int UpdateMovie(int Id, string Title, string Genre, string Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/UpdateMovie", ReplyAction="http://tempuri.org/IMyService/UpdateMovieResponse")]
        System.Threading.Tasks.Task<int> UpdateMovieAsync(int Id, string Title, string Genre, string Price);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteMovieById", ReplyAction="http://tempuri.org/IMyService/DeleteMovieByIdResponse")]
        int DeleteMovieById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMyService/DeleteMovieById", ReplyAction="http://tempuri.org/IMyService/DeleteMovieByIdResponse")]
        System.Threading.Tasks.Task<int> DeleteMovieByIdAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMyServiceChannel : MVC.ServiceReference1.IMyService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MyServiceClient : System.ServiceModel.ClientBase<MVC.ServiceReference1.IMyService>, MVC.ServiceReference1.IMyService {
        
        public MyServiceClient() {
        }
        
        public MyServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MyServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MyServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void DoWork() {
            base.Channel.DoWork();
        }
        
        public System.Threading.Tasks.Task DoWorkAsync() {
            return base.Channel.DoWorkAsync();
        }
        
        public MVC.ServiceReference1.movy[] GetAllMovie() {
            return base.Channel.GetAllMovie();
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReference1.movy[]> GetAllMovieAsync() {
            return base.Channel.GetAllMovieAsync();
        }
        
        public int AddMovie(string Title, string Genre, string Price) {
            return base.Channel.AddMovie(Title, Genre, Price);
        }
        
        public System.Threading.Tasks.Task<int> AddMovieAsync(string Title, string Genre, string Price) {
            return base.Channel.AddMovieAsync(Title, Genre, Price);
        }
        
        public MVC.ServiceReference1.movy GetAllMovieById(int id) {
            return base.Channel.GetAllMovieById(id);
        }
        
        public System.Threading.Tasks.Task<MVC.ServiceReference1.movy> GetAllMovieByIdAsync(int id) {
            return base.Channel.GetAllMovieByIdAsync(id);
        }
        
        public int UpdateMovie(int Id, string Title, string Genre, string Price) {
            return base.Channel.UpdateMovie(Id, Title, Genre, Price);
        }
        
        public System.Threading.Tasks.Task<int> UpdateMovieAsync(int Id, string Title, string Genre, string Price) {
            return base.Channel.UpdateMovieAsync(Id, Title, Genre, Price);
        }
        
        public int DeleteMovieById(int Id) {
            return base.Channel.DeleteMovieById(Id);
        }
        
        public System.Threading.Tasks.Task<int> DeleteMovieByIdAsync(int Id) {
            return base.Channel.DeleteMovieByIdAsync(Id);
        }
    }
}
